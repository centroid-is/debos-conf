---
- name: Configure freshly installed Debian
  hosts: localhost
  connection: local
  become: yes
  vars:
    root_password: "{{ root_password }}"
    centroid_password: "{{ centroid_password }}"
  tasks:

    - name: Set root password
      user:
        name: root
        password: "{{ root_password | password_hash('sha512') }}"

    - name: Create docker group
      group:
        name: docker
        state: present

    - name: Create centroid user with sudo & docker group
      user:
        name: centroid
        password: "{{ centroid_password | password_hash('sha512') }}"
        shell: /bin/bash
        groups: sudo,docker
        append: yes
        create_home: yes

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Prepare Docker keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Set correct permissions on Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable"
        mode: '0644'

    - name: Download and import ZeroTier GPG key
      shell: |
        curl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/main/doc/contact@zerotier.com.gpg' | gpg --import
      args:
        creates: /etc/apt/trusted.gpg.d/zerotier.gpg

    - name: Run ZeroTier installation script
      shell: |
        curl -s 'https://install.zerotier.com/' | gpg | bash
      args:
        creates: /usr/sbin/zerotier-one

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install base packages
      apt:
        name:
          - sudo
          - vim
          - openssh-server
          - ufw
          - unattended-upgrades
          - apt-listchanges
          - network-manager
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Check if running in container
      set_fact:
        is_container: "{{ ansible_virtualization_type == 'docker' }}"

    - name: Ensure NetworkManager is enabled
      systemd:
        name: NetworkManager
        enabled: yes
        state: started
      when: not is_container

    - name: Allow SSH & VNC through UFW
      ufw:
        rule: allow
        port: "{{ item }}"
      loop: [22, 5900]
      when: not is_container

    - name: Enable UFW
      ufw:
        state: enabled
      when: not is_container

    - name: Configure unattended-upgrades
      copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        content: |
          Unattended-Upgrade::Origins-Pattern {
            "o=Debian,n={{ ansible_lsb.codename }},l=Debian-Security";
          };
          Unattended-Upgrade::Automatic-Reboot "true";
          Unattended-Upgrade::Automatic-Reboot-Time "04:00";

    - name: Schedule weekly unattended runs
      copy:
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        content: |
          APT::Periodic::Update-Package-Lists "7";
          APT::Periodic::Unattended-Upgrade "7";
